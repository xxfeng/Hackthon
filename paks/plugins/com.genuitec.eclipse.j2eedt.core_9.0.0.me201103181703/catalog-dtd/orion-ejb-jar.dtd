<!-- Specifies a relational mapping of a List type. A List is a sequential (where order/index is important) Collection of items.
			The field containing the mapping must be of type java.util.List or the legacy types java.util.Vector or Type[]. -->
<!ELEMENT list-mapping (primkey-mapping, value-mapping)>
<!ATTLIST list-mapping table CDATA #IMPLIED
>

<!-- A field persistence manager is a custom persistence handler for a CMP-field. See <a href="http://www.orionserver.com/docs/api/com/evermind/server/ejb/FieldPersistenceManager.html">the API documentation</a> for details. -->
<!ELEMENT field-persistence-manager (property)>
<!ATTLIST field-persistence-manager class CDATA #IMPLIED
>

<!-- The runtime mapping (to groups and users) of a role. Maps to a security-role of the same name in the assembly descriptor. -->
<!ELEMENT security-role-mapping (group*, user*)>
<!ATTLIST security-role-mapping impliesAll CDATA #IMPLIED
name CDATA #IMPLIED
>

<!-- An attribute sent to the context. The only mandatory attribute in JNDI is the 'java.naming.factory.initial' which is the classname of the context factory implementation. -->
<!ELEMENT context-attribute (#PCDATA)>
<!ATTLIST context-attribute name CDATA #IMPLIED
value CDATA #IMPLIED
>

<!-- The method-intf element allows a method element to differentiate between
			the methods with the same name and signature that are defined in both
			the remote and home interfaces.

			The method-intf element must be one of the following: Home or Remote. -->
<!ELEMENT method-intf (#PCDATA)>

<!-- The resource-ref element is used for the declaration of a reference to 
			an external resource such as a datasource, JMS queue, mail session or similar.
			The resource-ref-mapping ties this to a JNDI-location when deploying. -->
<!ELEMENT resource-ref-mapping (lookup-context?)>
<!ATTLIST resource-ref-mapping location CDATA #IMPLIED
name CDATA #REQUIRED
>

<!-- Specifies a relational mapping of a Set type. A Set consists of n unique unordered items (order isnt specified and not relevant).
			The field containing the mapping must be of type java.util.Set. -->
<!ELEMENT set-mapping (primkey-mapping, value-mapping)>
<!ATTLIST set-mapping table CDATA #IMPLIED
>

<!-- Deployment info for a session bean. -->
<!ELEMENT message-driven-deployment (env-entry-mapping*, ejb-ref-mapping*, resource-ref-mapping*, timer-service?)>
<!ATTLIST message-driven-deployment cache-timeout CDATA #IMPLIED
connection-factory-location CDATA #IMPLIED
destination-location CDATA #IMPLIED
max-instances CDATA #IMPLIED
min-instances CDATA #IMPLIED
name CDATA #IMPLIED
>

<!-- Specifies the configuration of a property-based (bean properties) mapping persistence for this field.
			The properties have to adhere to the usual JavaBeans specification and the type of the containing object
			has to have an empty constructor (also per the beans spec). -->
<!ELEMENT properties (cmp-field-mapping*)>

<!-- The beans in this ejb-jar. -->
<!ELEMENT enterprise-beans (session-deployment | entity-deployment | message-driven-deployment)+>

<!-- Specified the configuration for persisting an entity reference via it's primary key.
			The child-tag of this tag is the specification of how to persist the primary key. -->
<!ELEMENT entity-ref (cmp-field-mapping)>
<!ATTLIST entity-ref home CDATA #IMPLIED
>

<!-- Specifies a mapping of the primary key part of a set of fields. -->
<!ELEMENT primkey-mapping (cmp-field-mapping)>

<!-- The default method-access policy for methods not tied to a method-permission. -->
<!ELEMENT default-method-access (security-role-mapping)>

<!-- Specifies a mapping of the map key. Map keys are always immutable. -->
<!ELEMENT map-key-mapping (cmp-field-mapping)>
<!ATTLIST map-key-mapping type CDATA #IMPLIED
>

<!-- The ejb-ref element is used for the declaration of a reference to 
			another enterprise bean's home. The ejb-ref-mapping ties this
			to a JNDI-location when deploying. -->
<!ELEMENT ejb-ref-mapping (#PCDATA)>
<!ATTLIST ejb-ref-mapping location CDATA #IMPLIED
name CDATA #REQUIRED
>

<!-- The method-param element contains the fully-qualified Java type name of
			a method parameter. -->
<!ELEMENT method-param (#PCDATA)>

<!-- The method-params element contains a list of the fully-qualified Java
			type names of the method parameters. -->
<!ELEMENT method-params (method-param*)>

<!-- The mapping of the assembly descriptor elements. -->
<!ELEMENT assembly-descriptor (security-role-mapping*, default-method-access?)>

<!-- An orion-ejb-jar.xml file contains the deploy-time info for an ejb-jar.
			It is located in ORION_HOME/application-deployments/deploymentName/jarname(.jar)/orion-ejb-jar.xml after deployment and META-INF/orion-ejb-jar.xml below the ejb-jar root if bundled with the application or if no deployment-directory is specified in server.xml. If using deployment-directory (which is the default) the bundled version will be copied to the deployment location if and only if no file exists at that location. It is used to specify initial (first time) deployment properties.
			After each deployment the deployment file is reformatted/augmented/altered by the server to add any new/missing info to it. -->
<!ELEMENT orion-ejb-jar (enterprise-beans, assembly-descriptor)>
<!ATTLIST orion-ejb-jar deployment-time CDATA #IMPLIED
deployment-version CDATA #IMPLIED
>

<!-- A user that this security-role-mapping implies. -->
<!ELEMENT user (#PCDATA)>
<!ATTLIST user name CDATA #IMPLIED
>

<!-- A group that this security-role-mapping implies. Ie all the members of the specified group are included in this role. -->
<!ELEMENT group (#PCDATA)>
<!ATTLIST group name CDATA #IMPLIED
>

<!-- Specified a mapping of the primary key part of a set of fields. -->
<!ELEMENT value-mapping (cmp-field-mapping)>
<!ATTLIST value-mapping immutable CDATA #IMPLIED
type CDATA #IMPLIED
>

<!-- Deployment info for a session bean. -->
<!ELEMENT session-deployment (env-entry-mapping*, ejb-ref-mapping*, resource-ref-mapping*, timer-service?)>
<!ATTLIST session-deployment cache-timeout CDATA #IMPLIED
call-timeout CDATA #IMPLIED
copy-by-value CDATA #IMPLIED
iiop-accessable CDATA #IMPLIED
location CDATA #IMPLIED
max-tx-retries CDATA #IMPLIED
name CDATA #IMPLIED
persistence-filename CDATA #IMPLIED
timeout CDATA #IMPLIED
wrapper CDATA #IMPLIED
>

<!-- The specification of an optional javax.naming.Context implementation used for retrieving the resource. This is useful when hooking up with 3rd party modules, such as a 3rd party JMS server for instance. Either use the context implementation supplied by the resource vendor or if none exists write an implementation which in turn negotiates with the vendor software. -->
<!ELEMENT lookup-context (context-attribute+)>
<!ATTLIST lookup-context location CDATA #IMPLIED
>

<!-- A configuration property. -->
<!ELEMENT property (#PCDATA)>
<!ATTLIST property name CDATA #IMPLIED
value CDATA #IMPLIED
>

<!-- Deployment info for an entity bean. -->
<!ELEMENT entity-deployment (primkey-mapping?, cmp-field-mapping*, finder-method*, env-entry-mapping*, ejb-ref-mapping*, resource-ref-mapping*, timer-service?)>
<!ATTLIST entity-deployment call-timeout CDATA #IMPLIED
clustering-schema CDATA #IMPLIED
copy-by-value CDATA #IMPLIED
data-source CDATA #IMPLIED
exclusive-write-access CDATA #IMPLIED
iiop-accessable CDATA #IMPLIED
instance-cache-timeout CDATA #IMPLIED
isolation CDATA #IMPLIED
location CDATA #IMPLIED
max-instances CDATA #IMPLIED
max-tx-retries CDATA #IMPLIED
name CDATA #IMPLIED
pool-cache-timeout CDATA #IMPLIED
table CDATA #IMPLIED
transaction-write-mode CDATA #IMPLIED
validity-timeout CDATA #IMPLIED
wrapper CDATA #IMPLIED
>

<!-- Specifies the configuration of a field-based (java class field) mapping persistence for this field.
			The fields that are to be persisted have to be public, non-static, non-final and the type of the containing object has to have an empty constructor. -->
<!ELEMENT fields (cmp-field-mapping*)>

<!-- Specifies a relational mapping of a Map type. A Map consists of n unique keys and their mapping to values.
			The field containing the mapping must be of type java.util.Map or the legacy types java.util.Hashtable or java.util.Properties. -->
<!ELEMENT map-mapping (primkey-mapping, map-key-mapping, value-mapping)>
<!ATTLIST map-mapping table CDATA #IMPLIED
>

<!-- Deployment info for a container-managed persistence field. If no subtags defining different behaviour is specified
		the field is persisted thru serialization or native handling of "recognized" primitive types. -->
<!ELEMENT cmp-field-mapping (fields|properties|entity-ref|list-mapping|collection-mapping|set-mapping|map-mapping|field-persistence-manager)?>
<!ATTLIST cmp-field-mapping ejb-reference-home CDATA #IMPLIED
name CDATA #IMPLIED
persistence-name CDATA #IMPLIED
persistence-type CDATA #IMPLIED
>

<!-- The beans in this ejb-jar. -->
<!ELEMENT timer-service (cmp-field-mapping?)>
<!ATTLIST timer-service data-source CDATA #IMPLIED
id-field-name CDATA #IMPLIED
info-field-name CDATA #IMPLIED
table CDATA #IMPLIED
timeout-field-name CDATA #IMPLIED
timeout-interval-field-name CDATA #IMPLIED
>

<!-- The method-name element contains a name of an enterprise bean method, or
			the asterisk (*) character. The asterisk is used when the element
			denotes all the methods of an enterprise bean's remote and home
			interfaces. -->
<!ELEMENT method-name (#PCDATA)>

<!-- The ejb-name element specifies an enterprise bean's name. This name is 
			assigned by the ejb-jar file producer to name the enterprise bean in the 
			ejb-jar file's deployment descriptor. The name must be unique among the 
			names of the enterprise beans in the same ejb-jar file.

			The enterprise bean code does not depend on the name; therefore the name 
			can be changed during the application-assembly process without breaking 
			the enterprise bean's function.

			There is no architected relationship between the ejb-name in the 
			deployment descriptor and the JNDI name that the Deployer will assign to 
			the enterprise bean's home.

			The name must conform to the lexical rules for an NMTOKEN. -->
<!ELEMENT ejb-name (#PCDATA)>

<!-- Overrides the value of an env-entry in the assembly descriptor. It is used to keep the .ear (assembly) clean from deployment-specific values. The body is the value. -->
<!ELEMENT env-entry-mapping (#PCDATA)>
<!ATTLIST env-entry-mapping name CDATA #IMPLIED
>

<!-- A short description. -->
<!ELEMENT description (#PCDATA)>

<!-- Specifies a relational mapping of a Collection type. A Collection consists of n unordered items (order isnt specified and not relevant).
			The field containing the mapping must be of type java.util.Collection. -->
<!ELEMENT collection-mapping (primkey-mapping, value-mapping)>
<!ATTLIST collection-mapping table CDATA #IMPLIED
>

<!-- The definition of a container-managed finder method. This defines the selection criteria in a findByXXX() method in the bean's home. -->
<!ELEMENT finder-method (method)>
<!ATTLIST finder-method partial CDATA #IMPLIED
query CDATA #IMPLIED
sql-query CDATA #IMPLIED
>

<!-- &lt;pre&gt;
			1. 	&lt;method&gt;
					&lt;ejb-name&gt;EJBNAME&lt;/ejb-name&gt;
			   		&lt;method-name&gt;*&lt;/method-name&gt;
				&lt;/method&gt;

			   This style is used to refer to all the methods of the specified
			   enterprise bean's home and remote interfaces.

			2. 	&lt;method&gt;
					&lt;ejb-name&gt;EJBNAME&lt;/ejb-name&gt;
			   		&lt;method-name&gt;METHOD&lt;/method-name&gt;
				&lt;/method&gt;&gt;

			   This style is used to refer to the specified method of the 
			   specified enterprise bean. If there are multiple methods with 
			   the same overloaded name, the element of this style refers to 
			   all the methods with the overloaded name.





			3. 	&lt;method&gt;
					&lt;ejb-name&gt;EJBNAME&lt;/ejb-name&gt;
			   		&lt;method-name&gt;METHOD&lt;/method-name&gt;
					&lt;method-params&gt;
			   			&lt;method-param&gt;PARAM-1&lt;/method-param&gt;
			   			&lt;method-param&gt;PARAM-2&lt;/method-param&gt;
			          			...
			   			&lt;method-param&gt;PARAM-n&lt;/method-param&gt;
					&lt;/method-params&gt;
				&lt;method&gt;	

			   This style is used to refer to a single method within a set of 
			   methods with an overloaded name. PARAM-1 through PARAM-n are the
			   fully-qualified Java types of the method's input parameters (if
			   the method has no input arguments, the method-params element 
			   contains no method-param elements). Arrays are specified by the
			   array element's type, followed by one or more pair of square 
			   brackets (e.g. int[][]). 
		&lt;/pre&gt; -->
<!ELEMENT method (description?, ejb-name, method-intf?, method-name, method-params?)>

